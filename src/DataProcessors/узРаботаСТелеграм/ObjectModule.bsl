
Функция ПолучитьНастройкиДляРаботыСТелеграм()
	
	пНастройкиДляРаботыСТелеграм = Новый Структура;
	
	//ТокенТелеграмБота = Справочники.узКонстанты.ПолучитьЗначениеКонстанты("ТокенТелеграмБота",
	//	Тип("Строка"),,Ложь);
	//Если Не ЗначениеЗаполнено(ТокенТелеграмБота) Тогда
	//	Возврат;
	//КонецЕсли;
	
	пВсеНастройкиПолучены = Истина;
	пТокенТелеграмБота = Константы.узТелеграмм_ТокенБота.Получить();
	Если Не ЗначениеЗаполнено(пТокенТелеграмБота) Тогда
		пВсеНастройкиПолучены = Ложь;
	КонецЕсли;

	
	пМассивНастроекПроксиСерверов = РегистрыСведений.узПроксиСерверы.ПолучитьМассивНастроекПроксиСерверов();
	пМассивНастроекПроксиСерверовКоличество = пМассивНастроекПроксиСерверов.Количество();
	Если пМассивНастроекПроксиСерверовКоличество = 0 Тогда
		пВсеНастройкиПолучены = Ложь;
	КонецЕсли;
	
	пНастройкиДляРаботыСТелеграм.Вставить("ТокенТелеграмБота", пТокенТелеграмБота);
	пНастройкиДляРаботыСТелеграм.Вставить("МассивНастроекПроксиСерверов", пМассивНастроекПроксиСерверов);
	пНастройкиДляРаботыСТелеграм.Вставить("НомерТекущейНастройкиПрокси", 0);
	пНастройкиДляРаботыСТелеграм.Вставить("ВсеНастройкиПолучены", пВсеНастройкиПолучены);
	Если пВсеНастройкиПолучены = Ложь Тогда
		ЗаписьЖурналаРегистрации("Телеграмм.Настройки", УровеньЖурналаРегистрации.Ошибка,,
			, "Не смогли получить настройки телеграм");

	КонецЕсли;	
	
	Возврат пНастройкиДляРаботыСТелеграм;
	
КонецФункции

Процедура ПрочитатьСообщенияTelegram() Экспорт
	
	НастройкиДляРаботыСТелеграм = ПолучитьНастройкиДляРаботыСТелеграм();
	Если НастройкиДляРаботыСТелеграм.ВсеНастройкиПолучены = Ложь Тогда
		Возврат;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(MaxMessangeID) Тогда
		ИДПоследнегоПринятогоСообщения = MaxMessangeID;
	Иначе
		ИДПоследнегоПринятогоСообщения = Справочники.узКонстанты.ПолучитьЗначениеКонстанты("ТелеграмMaxMessangeID", Тип("Строка"),,Ложь);
	КонецЕсли;	
	
	
	Ресурс = "bot" + НастройкиДляРаботыСТелеграм.ТокенТелеграмБота + "/getUpdates" + ?(ЗначениеЗаполнено(ИДПоследнегоПринятогоСообщения), "?offset=" + ИДПоследнегоПринятогоСообщения, "");
	ЗапросHTTP = Новый HTTPЗапрос(Ресурс);
	ЗапросHTTP.Заголовки.Вставить("Content-type", "keep-alive");
	
	Ответ = Неопределено;
	ВыполнитьЗапросHTTP_Telegram(Ответ, 
								ЗапросHTTP, 
								НастройкиДляРаботыСТелеграм.МассивНастроекПроксиСерверов, 
								НастройкиДляРаботыСТелеграм.НомерТекущейНастройкиПрокси, 
								Истина);
								
	Если Ответ = Неопределено 
		Или Ответ.КодСостояния < 200 
		Или Ответ.КодСостояния >= 300 Тогда

		ЗаписьЖурналаРегистрации("Телеграм.ПолучениеСообщений", УровеньЖурналаРегистрации.Ошибка,,
			, "Не смогли получить сообщения телеграм");
		Возврат;
	КонецЕсли;

	
	ОтветСтрокаJSON = Ответ.ПолучитьТелоКакСтроку();
	HTTPОтвет = ОтветСтрокаJSON;	
	пЧтениеJSON = Новый ЧтениеJSON;
   	пЧтениеJSON.УстановитьСтроку(ОтветСтрокаJSON);
   	ОтветСоответсвие = ПрочитатьJSON(пЧтениеJSON, Истина);//(пЧтениеJSON, Ложь, , , "ФункцияВосстановленияJSON", ЭтотОбъект);
   	пЧтениеJSON.Закрыть();
	
	Если ОтветСоответсвие["ok"] <> Истина Тогда
		Возврат;
	КонецЕсли;	
	
	МассивResult = ОтветСоответсвие["result"];
	ИДПоследнегоПринятогоСообщения = Неопределено;

	Для Каждого СоответсвиеMessange Из МассивResult Цикл
		
		ИДПоследнегоПринятогоСообщения = Формат(СоответсвиеMessange["update_id"] + 1, "ЧГ=");
		СоответсвиеMessange_message = СоответсвиеMessange.Получить("message");
		Если СоответсвиеMessange_message = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		ДатаСообщения = '19700101' + СоответсвиеMessange_message["date"] +7*60*60;
		СоответсвиеFrom = СоответсвиеMessange_message["from"];
		пLastName = СоответсвиеFrom["last_name"];
		пFirstName = СоответсвиеFrom["first_name"];
		пСhatИД = Формат(СоответсвиеMessange_message["chat"]["id"], "ЧГ=");
		Если СоответсвиеMessange_message.Получить("text") <> Неопределено Тогда
			MessageText = СоответсвиеMessange_message.Получить("text");

			Если Найти(MessageText, "/addwork") <> 0 Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	Пользователи.Ссылка КАК Пользователь
					|ИЗ
					|	Справочник.Пользователи КАК Пользователи
					|ГДЕ
					|	Пользователи.узИДПользователяТелеграмм = &узИДПользователяТелеграмм";
				
				Запрос.УстановитьПараметр("узИДПользователяТелеграмм", Число(пСhatИД));
				
				РезультатЗапроса = Запрос.Выполнить();
				Если РезультатЗапроса.Пустой() Тогда
					Продолжить;
				КонецЕсли;	
				
				Выборка = РезультатЗапроса.Выбрать();
				Пока Выборка.Следующий() Цикл
					ТекущиеДелаОбъект = Справочники.узТекущиеДела.СоздатьЭлемент();
					ТекущиеДелаОбъект.Автор = Выборка.Пользователь;
					ТекущиеДелаОбъект.ТекстСодержания = СтрЗаменить(MessageText, "/addwork", "");
					ТекущиеДелаОбъект.Записать();
				КонецЦикла;
	
			КонецЕсли;
		
		ИначеЕсли СоответсвиеMessange_message.Получить("photo") <> Неопределено Тогда
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	Если ЗначениеЗаполнено(ИДПоследнегоПринятогоСообщения) Тогда
		Справочники.узКонстанты.УстановитьЗначениеКонстанты("ТелеграмMaxMessangeID", ИДПоследнегоПринятогоСообщения);
		MaxMessangeID = ИДПоследнегоПринятогоСообщения; 
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОтправитьСообщениеTelegram(ТекстСообщения, МассивПользователейДляОтправки) Экспорт
	
	Если МассивПользователейДляОтправки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиДляРаботыСТелеграм = ПолучитьНастройкиДляРаботыСТелеграм();
	Если НастройкиДляРаботыСТелеграм.ВсеНастройкиПолучены = Ложь Тогда
		Возврат;
	КонецЕсли;	

	Для Каждого Пользователь Из МассивПользователейДляОтправки Цикл
		
		ИДПользователяТелеграм = Пользователь.узИДПользователяТелеграмм;
		Если Не ЗначениеЗаполнено(ИДПользователяТелеграм) Тогда
			Продолжить;
		КонецЕсли;
		
		//ТекстСообщения = СтрЗаменить(ТекстСообщения, "#", "");
	    СообщениеОтправлено = Ложь;

		//		Данные = 
		//		"{
		//|""chat_id"":"""+Формат(Выборка.ИДПользователяТелеграмм, "ЧГ=")+""",
		//|""text"":""Текст"",
		//|""reply_markup"": {
		//|    ""inline_keyboard"": [
		//|    [{
		//|  ""text"": ""ОбъектСогласования"",
		//|  ""url"":""http://192.168.13.130/BPS/ru_RU/#e1cib/data/Справочник.бпсПредметыСогласований?ref=838318dbf213445c11e8e41681645d42""
		//|     }]
		//|]
		//|}
		//|} ";

		Структура = Новый Соответствие;
		Структура.Вставить("chat_id",Формат(ИДПользователяТелеграм, "ЧГ="));
		Структура.Вставить("text", ТекстСообщения);
		Массив_reply_markup = Новый Массив;
		
		//Пример создания конпки в телеграм
		//Если ЗначениеЗаполнено(Выборка.ОбъектБД)
		//	И ЗначениеЗаполнено(АдресПубликации) Тогда
		//	
		//	Структура_inline_keyboard = Новый Структура;
		//	Структура_inline_keyboard.Вставить("text", Строка(Выборка.ОбъектБД));
		//	Структура_inline_keyboard.Вставить("url", АдресПубликации + "#" + ПолучитьНавигационнуюСсылку(Выборка.ОбъектБД));
		//                      
		//	Массив_reply_markup.Добавить(Структура_inline_keyboard);
		//КонецЕсли;	
		//Массив_inline_keyboard = Новый Массив;
		//Массив_inline_keyboard.Добавить(Массив_reply_markup);
		//
		//Структура_reply_markup = Новый Структура;
		//Структура_reply_markup.Вставить("inline_keyboard",Массив_inline_keyboard);
		//
		//Структура.Вставить("reply_markup", Структура_reply_markup);
		
		ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON;
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
		ЗаписатьJSON(ЗаписьJSON, Структура);
		Данные = ЗаписьJSON.Закрыть();
					
		Ресурс = "bot" + НастройкиДляРаботыСТелеграм.ТокенТелеграмБота + "/sendMessage";
		ЗапросHTTP = Новый HTTPЗапрос(Ресурс);
		ЗапросHTTP.Заголовки.Вставить("Content-type", "application/json");
		ЗапросHTTP.УстановитьТелоИзСтроки(Данные);

		Ответ = Неопределено;
		ВыполнитьЗапросHTTP_Telegram(Ответ, 
									ЗапросHTTP, 
									НастройкиДляРаботыСТелеграм.МассивНастроекПроксиСерверов, 
									НастройкиДляРаботыСТелеграм.НомерТекущейНастройкиПрокси);
		Если Ответ = Неопределено 
			Или Ответ.КодСостояния < 200 
			Или Ответ.КодСостояния >= 300 Тогда
		
			ЗаписьЖурналаРегистрации("Телеграм.ОтправкаСообщений", УровеньЖурналаРегистрации.Ошибка,,
				, "Не смогли отправить сообщение телеграм пользователю [" + Пользователь.узИДПользователяТелеграмм+"]");
		Иначе
			СообщениеОтправлено = Истина;		
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ВыполнитьЗапросHTTP_Telegram(Ответ, ЗапросHTTP, МассивНастроекПроксиСерверов, НомерТекущейНастройкиПрокси, ВОтветОжидаемJSON = Ложь)
	
	Ответ = Неопределено;
	Если НомерТекущейНастройкиПрокси >= МассивНастроекПроксиСерверов.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПрокси = МассивНастроекПроксиСерверов[НомерТекущейНастройкиПрокси];
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https",НастройкиПрокси.Адрес,НастройкиПрокси.Порт,НастройкиПрокси.Логин,НастройкиПрокси.Пароль,Ложь);

	Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
	
	Попытка 
		
		Ответ = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
		Если Ответ.КодСостояния < 200 Или Ответ.КодСостояния >= 300 Тогда
			НомерТекущейНастройкиПрокси = НомерТекущейНастройкиПрокси + 1;
			РегистрыСведений.узПроксиСерверы.ИзменитьОценкуРаботоспособностиПроксиСервера(НастройкиПрокси.Адрес, НастройкиПрокси.Порт, -1);
			Ответ = Неопределено;
			ВыполнитьЗапросHTTP_Telegram(Ответ, ЗапросHTTP, МассивНастроекПроксиСерверов, НомерТекущейНастройкиПрокси, ВОтветОжидаемJSON);			
			Возврат;
		КонецЕсли;
	
		ОтветСтрокаJSON = Ответ.ПолучитьТелоКакСтроку();

		Если ВОтветОжидаемJSON
			И СтрНайти(НРег(ОтветСтрокаJSON), "<html>") <> 0 Тогда //прокси может уже не работать, или внесен в гос реестр
		
			НомерТекущейНастройкиПрокси = НомерТекущейНастройкиПрокси + 1;
			РегистрыСведений.узПроксиСерверы.ИзменитьОценкуРаботоспособностиПроксиСервера(НастройкиПрокси.Адрес, НастройкиПрокси.Порт, -1);
			Ответ = Неопределено;
			ВыполнитьЗапросHTTP_Telegram(Ответ, ЗапросHTTP, МассивНастроекПроксиСерверов, НомерТекущейНастройкиПрокси, ВОтветОжидаемJSON);			
			Возврат;
			
		Иначе

			РегистрыСведений.узПроксиСерверы.ИзменитьОценкуРаботоспособностиПроксиСервера(НастройкиПрокси.Адрес, НастройкиПрокси.Порт, 1);
			Возврат;
			
		КонецЕсли;
	
	Исключение
		НомерТекущейНастройкиПрокси = НомерТекущейНастройкиПрокси + 1;
		РегистрыСведений.узПроксиСерверы.ИзменитьОценкуРаботоспособностиПроксиСервера(НастройкиПрокси.Адрес, НастройкиПрокси.Порт, -1);
		ВыполнитьЗапросHTTP_Telegram(Ответ, ЗапросHTTP, МассивНастроекПроксиСерверов, НомерТекущейНастройкиПрокси, ВОтветОжидаемJSON);	
	КонецПопытки
	
КонецПроцедуры
